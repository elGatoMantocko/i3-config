smart_gaps on
smart_borders on
gaps inner 5

smart_borders on

set $mod Mod4

font SFNS 11px

new_window pixel 3
focus_follows_mouse  no

#don't move to neighbouring screen with hjkl
force_focus_wrapping yes

set $gray1 #373d48
set $gray2 #29303a

client.focused            $gray1   $gray1   #FFFFFF   $gray1
client.focused_inactive   $gray2   $gray2   #FFFFFF   #000000
client.unfocused          $gray2   $gray2   #FFFFFF   #000000

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec gnome-terminal

# kill focused window
bindsym $mod+c kill

# start dmenu (a program launcher)
# bindsym $mod+p exec "dmenu_run -nb black -p run"
bindsym $mod+p exec --no-startup-id rofi -show run
bindsym $mod+Shift+p exec --no-startup-id rofi -show window
bindsym $mod+Shift+s exec --no-startup-id rofi -show ssh

# restart dunst
bindsym $mod+Shift+d exec killall dunst && exec notify-send 'restart dunst'

# screen lock
bindsym Control+$mod+l exec lock

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+v split h

# split in vertical orientation
bindsym $mod+g split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (tabbed, toggle split)
bindsym $mod+n layout tabbed
bindsym $mod+m layout toggle split

# container navigation
bindsym $mod+d focus parent
bindsym $mod+b focus child

# move container between displays
bindsym $mod+semicolon move workspace to output right

# toggle tiling / floating
bindsym $mod+Shift+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# switch to last workspace
bindsym $mod+6 workspace back_and_forth

# switch to workspace
bindsym $mod+q workspace 1: q
bindsym $mod+w workspace 2: w
bindsym $mod+e workspace 3: e
bindsym $mod+r workspace 4: r
bindsym $mod+t workspace 5: t
bindsym $mod+y workspace 6: y
bindsym $mod+u workspace 7: u
bindsym $mod+i workspace 8: i
bindsym $mod+o workspace 9: o

# move focused container to workspace
bindsym $mod+Shift+q move container to workspace 1: q
bindsym $mod+Shift+w move container to workspace 2: w
bindsym $mod+Shift+e move container to workspace 3: e
bindsym $mod+Shift+r move container to workspace 4: r
bindsym $mod+Shift+t move container to workspace 5: t
bindsym $mod+Shift+y move container to workspace 6: y
bindsym $mod+Shift+u move container to workspace 7: u
bindsym $mod+Shift+i move container to workspace 8: i
bindsym $mod+Shift+o move container to workspace 9: o

bindsym $mod+z reload
bindsym $mod+Shift+x restart
bindsym $mod+Shift+z exit

mode "resize" {
        bindsym h   resize shrink width 10 px or 10 ppt
        bindsym j   resize grow height 10 px or 10 ppt
        bindsym k   resize shrink height 10 px or 10 ppt
        bindsym l   resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or q or ^[
        bindsym Return mode "default"
        bindsym q mode "default"
        bindsym Escape mode "default"
        bindcode Control+34 mode "default"
}

bindsym $mod+s mode "resize"

# multimedia keys
bindsym XF86AudioRaiseVolume exec "amixer -D pulse sset Master '5%+'"
bindsym XF86AudioLowerVolume exec "amixer -D pulse sset Master '5%-'"
bindsym XF86AudioMute exec "amixer -D pulse set Master toggle"
bindsym XF86AudioMicMute exec "amixer -D pulse sset Capture toggle"

bindsym XF86AudioPlay exec "~/.bin/player toggle"
bindsym XF86AudioStop exec "~/.bin/player stop"
bindsym XF86AudioNext exec "~/.bin/player next"
bindsym XF86AudioPrev exec "~/.bin/player previous"

bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

bindsym XF86TouchpadToggle exec "synclient TouchpadOff=$(synclient | awk '/TouchpadOff/ {print ($3+1)%2}')"

bindsym XF86Display exec "arandr"

bindsym $mod+a exec "gnome-terminal -e alsamixer"
bindsym $mod+Shift+a exec "pavucontrol"
bindsym $mod+Shift+g exec "google-chrome"

bar {
        position top
        status_command ~/dotfiles/conky/conky-wrapper
        strip_workspace_numbers yes
        colors {
                statusline #AAAAAA
                background $gray2
                focused_workspace $gray2 $gray2 #FFFFFF
                inactive_workspace $gray1 $gray1 #AAAAAA
        }
}

